{"version":3,"sources":["components/dashboard/PurchasesTable.js"],"names":["CustomTotal","sizePerPage","totalSize","page","lastIndex","columns","dataField","text","formatter","customerName","to","className","sort","status","color","icon","transform","SelectRowInput","indeterminate","rest","rowIndex","onChange","ref","input","selectRow","onSelect","mode","clickToSelect","selectionHeaderRenderer","type","selectionRenderer","onSelectAll","options","custom","PurchasesTable","setIsSelected","purchases","table","createRef","handleNextPage","onPageChange","handlePrevPage","setImmediate","current","selectionContext","selected","length","pagination","paginationFactory","paginationProps","paginationTableProps","bootstrap4","keyField","data","bordered","classes","rowClasses","headerClasses","noGutters","size","iconAlign","onClick","newSizePerPage","onSizePerPageChange","xs","disabled","defaultProps","value"],"mappings":"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","file":"static/js/12.8a419cb5.chunk.js","sourcesContent":["import React, { Fragment, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport Badge from 'reactstrap/es/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Col, Row } from 'reactstrap';\nimport ButtonIcon from '../common/ButtonIcon';\nimport { Link } from 'react-router-dom';\n\nconst CustomTotal = ({ sizePerPage, totalSize, page, lastIndex }) => (\n  <span>\n    {(page - 1) * sizePerPage + 1} to {lastIndex > totalSize ? totalSize : lastIndex} of {totalSize} â€”{' '}\n  </span>\n);\n\nconst customerFormatter = customerName => (\n  <Link to={`pages/customer-details?id=${customerName}`} className=\"font-weight-semi-bold\">\n    {customerName}\n  </Link>\n);\n\nconst badgeFormatter = status => {\n  let color = '';\n  let icon = '';\n  let text = '';\n  switch (status) {\n    case 'accepted':\n      color = 'success';\n      icon = 'check';\n      text = 'Accepted';\n      break;\n    case 'submitted':\n      color = 'warning';\n      icon = 'stream';\n      text = 'Submitted';\n      break; \n    case 'withdrawn':\n      color = 'danger';\n      icon = 'ban';\n      text = 'Withdrawn';\n      break;            \n    default:\n      color = 'info';\n      icon = 'envelope';\n      text = 'Request Info';\n  }\n  return (\n    <Badge color={`soft-${color}`} className=\"rounded-capsule fs--1\">\n      {text}\n      <FontAwesomeIcon icon={icon} transform=\"shrink-2\" className=\"ml-1\" />\n    </Badge>\n  );\n};\n\nconst amountFormatter = amount => <Fragment>${amount}</Fragment>;\n\nconst columns = [\n  {\n    dataField: 'id',\n    text: 'ID',\n    formatter: customerFormatter,\n    sort: true\n  },  \n  {\n    dataField: 'full_name',\n    text: 'Full Name',\n    sort: true\n  },\n  {\n    dataField: 'submitted_on',\n    text: 'Submitted On',\n    sort: true\n  },  \n  {\n    dataField: 'degree_program',\n    text: 'Degree Program',\n    sort: true\n  },\n  {\n    dataField: 'status',\n    text: 'Status',\n    formatter: badgeFormatter,\n    sort: true\n  },\n  {\n    dataField: 'action',\n    text: ''\n  }\n];\n\nconst SelectRowInput = ({ indeterminate, rowIndex, ...rest }) => (\n  <div className=\"custom-control custom-checkbox\">\n    <input\n      className=\"custom-control-input\"\n      {...rest}\n      onChange={() => {}}\n      ref={input => {\n        if (input) input.indeterminate = indeterminate;\n      }}\n    />\n    <label className=\"custom-control-label\" />\n  </div>\n);\n\nconst selectRow = onSelect => ({\n  mode: 'checkbox',\n  clickToSelect: false,\n  selectionHeaderRenderer: ({ mode, ...rest }) => <SelectRowInput type=\"checkbox\" {...rest} />,\n  selectionRenderer: ({ mode, ...rest }) => <SelectRowInput type={mode} {...rest} />,\n  onSelect: onSelect,\n  onSelectAll: onSelect\n});\n\nconst options = {\n  custom: true,\n  sizePerPage: 100,\n  totalSize: 0\n};\n\nconst PurchasesTable = ({ setIsSelected, purchases }) => {\n  let table = createRef();\n  const handleNextPage = ({ page, onPageChange }) => () => {\n    onPageChange(page + 1);\n  };\n\n  const handlePrevPage = ({ page, onPageChange }) => () => {\n    onPageChange(page - 1);\n  };\n\n  const handleViewAll = ({ onSizePerPageChange }, newSizePerPage) => {\n    onSizePerPageChange(newSizePerPage, 1);\n  };\n\n  const onSelect = () => {\n    setImmediate(() => {\n      setIsSelected(!!table.current.selectionContext.selected.length);\n    });\n  };\n\n  return (\n    <PaginationProvider pagination={paginationFactory(options)}>\n      {({ paginationProps, paginationTableProps }) => {\n        const lastIndex = paginationProps.page * paginationProps.sizePerPage;\n\n        return (\n          <Fragment>\n            <div className=\"table-responsive\">\n              <BootstrapTable\n                ref={table}\n                bootstrap4\n                keyField=\"id\"\n                data={purchases}\n                columns={columns}\n                selectRow={selectRow(onSelect)}\n                bordered={false}\n                classes=\"table-dashboard table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap\"\n                rowClasses=\"btn-reveal-trigger\"\n                headerClasses=\"bg-200 text-900\"\n                {...paginationTableProps}\n              />\n            </div>\n            <Row noGutters className=\"px-1 py-3\">\n              <Col className=\"pl-3 fs--1\">\n                <CustomTotal {...paginationProps} lastIndex={lastIndex} />\n                <ButtonIcon\n                  color=\"link\"\n                  size=\"sm\"\n                  icon=\"chevron-right\"\n                  iconAlign=\"right\"\n                  transform=\"down-1 shrink-4\"\n                  className=\"px-0 font-weight-semi-bold\"\n                  onClick={() => handleViewAll(paginationProps, purchases.length)}\n                >\n                  view all\n                </ButtonIcon>\n              </Col>\n              <Col xs=\"auto\" className=\"pr-3\">\n                <Button\n                  color={paginationProps.page === 1 ? 'light' : 'primary'}\n                  size=\"sm\"\n                  onClick={handlePrevPage(paginationProps)}\n                  disabled={paginationProps.page === 1}\n                >\n                  Previous\n                </Button>\n                <Button\n                  color={lastIndex >= paginationProps.totalSize ? 'light' : 'primary'}\n                  size=\"sm\"\n                  className=\"ml-2 px-4\"\n                  onClick={handleNextPage(paginationProps)}\n                  disabled={lastIndex >= paginationProps.totalSize}\n                >\n                  Next\n                </Button>\n              </Col>\n            </Row>\n          </Fragment>\n        );\n      }}\n    </PaginationProvider>\n  );\n};\n\nPurchasesTable.propTypes = { value: PropTypes.any };\n\nPurchasesTable.defaultProps = { value: `PurchasesTable` };\n\nexport default PurchasesTable;\n"],"sourceRoot":""}